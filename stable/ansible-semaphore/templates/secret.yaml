{{- if not .Values.secrets.existingSecret }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-general
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{- $generalSecretName := printf "%s-general" (include "ansible-semaphore.fullname" .) }}
  {{- $generalSecretObj := (lookup "v1" "Secret" .Release.Namespace $generalSecretName) | default dict }}
  {{- $generalSecretData := (get $generalSecretObj "data") | default dict }}
  {{- $cookieHash := (get $generalSecretData .Values.secrets.cookieHashKey) | default (randAlphaNum 32 | b64enc | b64enc) }}
  {{ .Values.secrets.cookieHashKey }}: {{ .Values.secrets.cookieHash | default ($cookieHash) }}
  {{- $cookieEncryptionKey := (get $generalSecretData .Values.secrets.cookieEncryptionKey) | default (randAlphaNum 32 | b64enc | b64enc) }}
  {{ .Values.secrets.cookieEncryptionKey }}: {{ .Values.secrets.cookieEncryption | default ($cookieEncryptionKey) }}
  {{- $accesskeyEncryptionKey := (get $generalSecretData .Values.secrets.accesskeyEncryptionKey) | default (randAlphaNum 32 | b64enc | b64enc) }}
  {{ .Values.secrets.accesskeyEncryptionKey }}: {{ .Values.secrets.accesskeyEncryption | default ($accesskeyEncryptionKey) }}
{{- end }}
{{- if not .Values.runner.existingSecret }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-runner
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{- $runnerSecretName := printf "%s-runner" (include "ansible-semaphore.fullname" .) }}
  {{- $runnerSecretObj := (lookup "v1" "Secret" .Release.Namespace $runnerSecretName) | default dict }}
  {{- $runnerSecretData := (get $runnerSecretObj "data") | default dict }}
  {{- $token := (get $runnerSecretData .Values.runner.tokenKey) | default (randAlphaNum 32 | b64enc) }}
  {{ .Values.runner.tokenKey }}: {{ .Values.runner.token | default ($token) }}
{{- end }}
{{- if and (not .Values.admin.existingSecret) (.Values.admin.create) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-admin
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{- $adminSecretName := printf "%s-admin" (include "ansible-semaphore.fullname" .) }}
  {{- $adminSecretObj := (lookup "v1" "Secret" .Release.Namespace $adminSecretName) | default dict }}
  {{- $adminSecretData := (get $adminSecretObj "data") | default dict }}
  {{- $adminPassword := (get $adminSecretData .Values.admin.passwordKey) | default (randAlphaNum 32 | b64enc) }}
  {{ .Values.admin.fullnameKey }}: {{ .Values.admin.fullname | b64enc }}
  {{ .Values.admin.usernameKey }}: {{ .Values.admin.username | b64enc }}
  {{ .Values.admin.passwordKey }}: {{ .Values.admin.password | default ($adminPassword) }}
  {{ .Values.admin.emailKey }}: {{ .Values.admin.email | b64enc }}
{{- end }}
{{- if and (not .Values.ldap.existingSecret) (.Values.ldap.enable) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-ldap
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{ .Values.ldap.binddnKey }}: {{ .Values.ldap.binddn | b64enc }}
  {{ .Values.ldap.passwordKey }}: {{ .Values.ldap.password | b64enc }}
{{- end }}
{{- if and (not .Values.email.existingSecret) (.Values.email.alert) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-email
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{ .Values.email.usernameKey }}: {{ .Values.email.username | b64enc }}
  {{ .Values.email.passwordKey }}: {{ .Values.email.password | b64enc }}
{{- end }}
{{- if and (not .Values.telegram.existingSecret) (.Values.telegram.alert) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-telegram
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{ .Values.telegram.chatKey }}: {{ .Values.telegram.chat | b64enc }}
  {{ .Values.telegram.tokenKey }}: {{ .Values.telegram.token | b64enc }}
{{- end }}
{{- if and (not .Values.slack.existingSecret) (.Values.slack.alert) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-slack
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{ .Values.slack.urlKey }}: {{ .Values.slack.url | b64enc }}
{{- end }}
{{- if and (not .Values.database.existingSecret) (ne .Values.database.type "bolt" ) }}
---
apiVersion: v1
kind: Secret

metadata:
  name: {{ include "ansible-semaphore.fullname" . }}-database
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ansible-semaphore.labels" . | nindent 4 }}
{{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
{{- end }}
{{- if  .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}

type: Opaque
data:
  {{ .Values.database.usernameKey }}: {{ .Values.database.username | b64enc }}
  {{ .Values.database.passwordKey }}: {{ .Values.database.password | b64enc }}
{{- end }}
