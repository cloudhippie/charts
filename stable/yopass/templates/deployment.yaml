apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "yopass.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "yopass.labels" . | nindent 4 }}
{{- with .Values.annotation }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}

spec:
  replicas: {{ .Values.replicaCount }}

  selector:
    matchLabels:
      {{- include "yopass.selectorLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "yopass.labels" . | nindent 8 }}
{{- if  .Values.annotations }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
{{- end }}

    spec:
      serviceAccountName: {{ include "yopass.serviceAccountName" . }}
      {{- if .Values.image.pullSecrets }}

      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          args:
            - --address=0.0.0.0
            - --port={{ .Values.service.internalPort }}
            {{- if .Values.metrics.enabled }}
            - --metrics-port={{ .Values.metrics.internalPort }}
            {{- end }}
            - --database={{ .Values.database.type }}
            {{- if eq .Values.database.type "redis" }}
            - --redis={{ .Values.database.dsn }}
            {{- end }}
            {{- if eq .Values.database.type "memcached" }}
            - --memcached={{ .Values.database.dsn }}
            {{- end }}
            - --max-length={{ .Values.config.maxLength }}
          {{- with .Values.securityContext }}

          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.extraEnvSecrets .Values.extraEnvVariables }}

          env:
            {{- range $key, $value := .Values.extraEnvSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ required "Must specify secret!" $value.secret }}
                  key: {{ required "Must specify key!" $value.key }}
            {{- end }}
            {{- range $key, $value := .Values.extraEnvVariables }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
          {{- if or .Values.envFromSecrets .Values.envFromConfigMaps }}

          envFrom:
          {{- range $name := .Values.envFromSecrets }}
            - secretRef:
                name: {{ $name }}
          {{- end }}
          {{- range $name := .Values.envFromConfigMaps }}
            - configMapRef:
                name: {{ $name }}
          {{- end }}
          {{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.internalPort }}
              protocol: TCP
            {{- end }}

          livenessProbe:
            httpGet:
              path: /
              port: http

          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- if .Values.resources }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      {{- if .Values.nodeSelector }}

      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}

      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}

      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
